{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/Prompt.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Date","now","text","type","placeholder","value","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","editTodo","edit","setEdit","map","todo","index","isComplete","unselectable","onClick","Prompt","length","src","href","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48196797.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport {MdAddCircleOutline} from \"react-icons/md\"\n\nfunction TodoForm(props) {\n\n    const [input, setInput] = useState('');\n\n    // useEffect and useRef hooks do the autofocus\n    const inputRef = useRef(null);\n    useEffect(() => {\n        inputRef.current.focus();\n    })\n\n    const handleChange = e => {\n        setInput(e.target.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        props.onSubmit({\n            id: Date.now(), // make sure the IDs are unique\n            text: input\n        });\n\n        setInput(''); // clear the input box after this todo is handled\n    };\n\n    return (\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            <input\n                type=\"text\" \n                placeholder=\"What to do...\" \n                value = {input}\n                name=\"text\" \n                className=\"todo-input\"\n                onChange={handleChange}\n                ref={inputRef}\n            />\n            <button className=\"todo-button\"> <MdAddCircleOutline /> </button>\n        </form> \n    )\n}\n\nexport default TodoForm;\n","import React, {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport {MdOutlineDelete} from \"react-icons/md\";\nimport {MdEdit} from \"react-icons/md\";\n\nfunction Todo({todos, completeTodo, removeTodo, editTodo}) {\n\n    const [edit, setEdit] = useState({\n        id: null,\n        value: \"\"\n    });\n\n    const submitUpdate = value => {\n        editTodo(edit.id, value)\n        setEdit({\n            id: null,\n            value: ''\n        })\n    }\n\n    if (edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n    };\n\n    return todos.map((todo, index) => (\n        <div className={todo.isComplete ? \"todo-row-complete\" : \"todo-row\"}>\n            <div className=\"hiden-clicker\" unselectable=\"on\" key={index} onClick={() => completeTodo(todo.id)}>\n                <MdEdit /* just a place holder for the hiden clicker: ) */ />\n            </div>\n            <div className=\"todo-text\">\n                {todo.text}\n            </div>\n            <MdEdit \n                onClick={() => setEdit({id: todo.id, value: todo.text})}\n                className=\"edit-icon\"\n            />\n            <MdOutlineDelete\n                onClick={() => removeTodo(todo.id)}\n                className=\"delete-icon\"\n            />\n        </div>\n    ))\n}\n\nexport default Todo\n","import React, {useState} from 'react';\n\nfunction Prompt({todos}) {\n\n    return(\n        <div>\n            <div className={todos.length===0 ? \"shown\" : \"invisible\"}>\n                <img src=\"https://yizhuo-liang.github.io/resources/pictures/happyliang.png\" className='liang' />\n                <div className=\"prompt\">\n                    Hi, I'm Coulittleson. Type in some todos! <br />\n                    For more info, click <a href=\"https://github.com/Yizhuo-Liang/react-todo-app/blob/master/README.md\"> here</a>.\n                </div>\n            </div>\n\n            <div className={todos.length===2 ? \"shown\" : \"invisible\"}>\n                <img src=\"https://yizhuo-liang.github.io/resources/pictures/happyliang.png\" className='liang' />\n                <p className=\"prompt\"> You can delete todos by the garbage button! </p>\n            </div>\n\n            <div className={todos.length===10 ? \"shown\" : \"invisible\"}>\n                <img src=\"https://yizhuo-liang.github.io/resources/pictures/angerliang.png\" className='liang' />\n                <p className=\"prompt\"> Too much todos! </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Prompt","import React, {useState} from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport Prompt from './Prompt';\n\nfunction TodoList() {\n\n    const [todos, setTodos] = useState([]);\n\n    const addTodo = todo => {\n\n        // this handles the situation that the user puts all spaces\n        // and fixes the input if there is a mega space between tow words\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\n            return\n        }\n\n        const newTodos = [todo, ...todos]\n\n        setTodos(newTodos);\n    };\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id)\n\n        setTodos(removeArr)\n    }\n\n    const editTodo = (todoId, newValue) => {\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return\n        }\n\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if(todo.id === id) {\n                // flip the completion status\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    return (\n        <div>\n            <h1> TODAY </h1>\n            <TodoForm onSubmit={addTodo} /* display the input box */ />\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} editTodo={editTodo} /* display the todo list */ />\n            <Prompt todos={todos} /* display the conversation box */ />\n        </div>\n    )\n}\n\nexport default TodoList\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}